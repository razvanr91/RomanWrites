@using RomanWrites.Services
@using RomanWrites.Models
@using RomanWrites.Enums
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject UserManager<BlogUser> UserManager
@inject IImageService ImageService
@model IPagedList<Post>

@{
    ViewData["Title"] = "Index";
}

<div class="row mb-2">
    @foreach ( var post in Model )
    {
        //Check if logged in user is author of post
        var isAuthor = false;

        if ( User.Identity.IsAuthenticated )
        {
            isAuthor = ( post.AuthorId == UserManager.GetUserId(User) );
        }

        <div class="col-sm-6 col-lg-4">
            <div class="card rounded">
                <div class="card-body text-center">
                    <hr class="card-hr" />
                    <h5 class="card-title">@post.Title</h5>
                    <hr class="card-hr" />

                    <div>
                        <p class="card-text">@post.Abstract</p>
                    </div>

                    <br />

                    <div class="text-center mb-2">
                        <a class="btn btn-primary btn-sm rounded-pill" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">Read post</a>
                        @if ( User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor )
                        {
                            <a class="btn btn-warning btn-sm rounded-pill" asp-action="Edit" asp-controller="Posts" asp-route-id="@post.Id">Edit</a>
                        }
                    </div>

                    <img src="@ImageService.DecodeImage(post.ImageData, post.ContentType)" class="card-img-bottom" />

                </div>
            </div>
        </div>
    }
</div>

<hr />

<div class="row">
    @if (User.IsInRole(BlogRole.Administrator.ToString()))
    {
        <a class="btn btn-primary rounded-pill" asp-action="Create" asp-controller="Posts">New Post</a>
    }
</div>

<hr />

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("BlogPost", new { id = Model.FirstOrDefault().BlogId, page = page }),
                new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
    </div>
</div>